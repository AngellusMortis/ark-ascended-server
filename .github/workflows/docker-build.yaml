name: Build and Test Server Image

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

defaults:
  run:
    shell: bash

jobs:

  build-and-run:
    name: Build and Run Server
    runs-on: ubuntu-latest
    strategy:
      matrix:
        system: [docker, podman]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Variables
        id: variables
        run: |
          echo "::set-output name=datetime::$(date +%Y%m%dT%H%M%SZ)"
          echo "::set-output name=userid::$(id -u)"
          echo "::set-output name=groupid::$(id -g)"

      - name: Make Test Directory
        if: matrix.system == 'docker'
        run: |
          mkdir -p local-test
          sudo chown -R 1000:1000 local-test

      - name: Make Podman Directories
        if: matrix.system == 'podman' 
        run: |
          mkdir -p local-test
          podman unshare chown 1000:1000 $(pwd)/local-test

      - name: Build Docker Image
        if: ${{ success() && matrix.system == 'docker' }}
        run: |
          docker build \
          --file Dockerfile \
          --tag docker.io/sknnr/ark-ascended-server:${{ steps.variables.outputs.datetime }} \
          .

      - name: Test Docker Image
        if: ${{ success() && matrix.system == 'docker' }}
        continue-on-error: true
        timeout-minutes: 5
        run: |
          docker run \
            --detach \
            --name ark-ascended-server-test \
            --mount type=bind,source=$(shell pwd)/local-test,target=/home/steam/ark/ShooterGame/Saved \
            --env=SERVER_MAP=TheIsland_WP \
            --env=SESSION_NAME=Ark-Ascended-GitHub-Test \
            --env=SERVER_PASSWORD=foo \
            --env=SERVER_ADMIN_PASSWORD=foo \
            --env=GAME_PORT=7777 \
            --env=QUERY_PORT=27015 \
            docker.io/sknnr/ark-ascended-server:${{ steps.variables.outputs.datetime }}
          sleep 60
          docker logs ark-ascended-test > ./ark-ascended-test.log
          docker stop ark-ascended-test && docker rm ark-ascended-test

      - name: Build the Podman Image
        if: ${{ success() && matrix.system == 'podman' }}
        run: |
          BUILDAH_LAYERS=true buildah bud \
          --file Dockerfile \
          --tag docker.io/sknnr/ark-ascended-server:${{ steps.variables.outputs.datetime }} \
          .

      - name: Test Run the Podman Image
        if: ${{ success() && matrix.system == 'podman' }}
        continue-on-error: true
        timeout-minutes: 5
        run: |
          podman run \
            --detach \
            --name ark-ascended-server-test \
            --mount type=bind,source=$(shell pwd)/local-test,target=/home/steam/ark/ShooterGame/Saved \
            --env=SERVER_MAP=TheIsland_WP \
            --env=SESSION_NAME=Ark-Ascended-GitHub-Test \
            --env=SERVER_PASSWORD=foo \
            --env=SERVER_ADMIN_PASSWORD=foo \
            --env=GAME_PORT=7777 \
            --env=QUERY_PORT=27015 \
            docker.io/sknnr/ark-ascended-server:${{ steps.variables.outputs.datetime }}
          sleep 60
          podman logs ark-ascended-test > ./ark-ascended-test.log
          podman stop ark-ascended-test && podman rm ark-ascended-test

      - name: Upload Container Logs
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: container-logs-${{ matrix.system }}
          path: |
            ark-ascended-test.log

  test-docker:
    name: Test Server
    runs-on: ubuntu-latest
    needs:
      - build-and-run
    strategy:
      matrix:
        system: [docker, podman]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Download Container Logs
        uses: actions/download-artifact@v2
        with:
          name: container-logs-${{ matrix.system }}

      - name: Test - Server Started
        run: |
          check_for_entry() {
            if ! grep -q -iE "$1" "./ark-ascended-test.log"; then
              printf "Could not find [%s] in [%s]\n" "$1" "./ark-ascended-test.log"
              exit 1
            else
              printf "Found [%s] in [%s]\n" "$1" "./ark-ascended-test.log"
            fi
          }

          check_for_entry "has successfully started!"
